{"version":3,"sources":["utils.js","constants.js","MemberNode.js","familyTreeMock.js","App.js","index.js"],"names":["deepClone","obj","clone","Object","assign","keys","forEach","key","res","Array","isArray","length","from","findMember","tree","arguments","undefined","selector","members","split","currentNode","children","name","find","ele","pickRandom","list","Math","floor","random","MALE","FEMALE","REMOVE_CONFIRM_MESSAGE","CITY_LIST","COLOR_LIST","NAME_LIST","MemberNode","onAddChild","e","stopPropagation","nodeData","_this","props","child","concat","attributes","City","Gender","Fav Color","addChild","onRemove","window","confirm","removeChild","_this$props","this","className","_nodeData$attributes","_children","_nodeData$name","react_default","a","createElement","map","value","onClick","title","React","PureComponent","familyTreeMock","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","parent","nextData","state","data","targetMember","toConsumableArray","setState","filter","member","initialFamilyTree","position","x","y","dimensions","treeContainer","getBoundingClientRect","width","_this2","_this$state","_this$state$data","_this$state$position","id","style","height","ref","dom","react_d3_tree_min_default","translate","orientation","nodeSize","allowForeignObjects","circleRadius","nodeLabelComponent","render","src_MemberNode","foreignObjectWrapper","Component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.27a33791.chunk.js","sourcesContent":["export const deepClone = obj => {\n  const clone = Object.assign({}, obj);\n  Object.keys(clone).forEach(key => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  let res = clone;\n  if (Array.isArray(obj)) {\n    res = (clone.length = obj.length) && Array.from(clone);\n  }\n  return res;\n};\n\nexport const findMember = (tree = [], selector) => {\n  if (!selector) return tree[0];\n\n  const members = selector.split('.');\n  let currentNode = { children: tree };\n  members.forEach(name => {\n    currentNode = (currentNode.children || []).find(ele => ele.name === name);\n  });\n  return currentNode;\n};\n\nexport const pickRandom = list => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n","export const TEXT = /^\\w+$/;\nexport const AGE = /^[1-9]\\d{,2}$/;\nexport const NAME = /^\\w{3,}$/;\nexport const MALE = 'Male';\nexport const FEMALE = 'Female';\nexport const REMOVE_CONFIRM_MESSAGE =\n  'Are you sure, you want to remove this member?';\n\nexport const CITY_LIST = [\n  'Chennai',\n  'Mumbai',\n  'Delhi',\n  'Kolkata',\n  'Jaipur',\n  'Blore',\n  'Pune',\n  'Hyd',\n  'Kochi',\n  'Goa',\n  'Vizag',\n];\n\nexport const COLOR_LIST = [\n  'White',\n  'Black',\n  'Cyan',\n  'Violet',\n  'Indigo',\n  'Blue',\n  'Green',\n  'Yellow',\n  'Orange',\n  'Red',\n  'Pink',\n];\n\nexport const NAME_LIST = [\n  'Kartik',\n  'Ganesh',\n  'Ram',\n  'Hari',\n  'Rakesh',\n  'Suresh',\n  'John',\n  'Mark',\n  'Ramesh',\n  'Jitu',\n  'Ambu',\n  'Abhi',\n  'Scott',\n  'Durga',\n  'Swati',\n  'Rani',\n  'Revathy',\n  'Preethi',\n  'Sasmita',\n  'Rasmita',\n  'Reshma',\n];\n\nexport const fields = {\n  name: {\n    label: 'Name',\n    type: 'text',\n    validation: value => NAME.test(value),\n  },\n  age: {\n    label: 'Age',\n    type: 'number',\n    validation: value => AGE.test(value),\n  },\n  gender: {\n    label: 'Gender',\n    type: 'select',\n    validation: value => [MALE, FEMALE].includes(value),\n  },\n  color: {\n    label: 'Fav Color',\n    type: 'text',\n    validation: value => TEXT.test(value),\n  },\n};\n","import React from 'react';\nimport { pickRandom } from './utils';\nimport {\n  CITY_LIST,\n  NAME_LIST,\n  COLOR_LIST,\n  MALE,\n  FEMALE,\n  REMOVE_CONFIRM_MESSAGE,\n} from './constants';\n\nclass MemberNode extends React.PureComponent {\n  onAddChild = e => {\n    e && e.stopPropagation();\n    const { nodeData } = this.props;\n\n    // TODO: Open dialog and take the Name and other values.\n    const name = pickRandom(NAME_LIST);\n    const child = {\n      name,\n      key: `${nodeData.key}.${name}`,\n      attributes: {\n        City: pickRandom(CITY_LIST),\n        Gender: pickRandom([MALE, FEMALE]),\n        'Fav Color': pickRandom(COLOR_LIST),\n      },\n    };\n    this.props.addChild(nodeData, child);\n  };\n\n  onRemove = e => {\n    e && e.stopPropagation();\n    const { nodeData } = this.props;\n\n    if (window.confirm(REMOVE_CONFIRM_MESSAGE))\n      this.props.removeChild(nodeData);\n  };\n\n  render() {\n    const { className, nodeData } = this.props;\n    const { attributes = {}, _children: children, name = '' } = nodeData;\n\n    return (\n      <div className={`${className} ${children ? 'parent' : 'leaf'}`}>\n        <h3>{name}</h3>\n        <div className=\"attr-wrapper\">\n          {Object.keys(attributes).map(key => {\n            const value = attributes[key] || '';\n            if (!value) return null;\n\n            return (\n              <div className=\"attr-row\" key={value}>\n                <span className=\"label\">{key}</span>:&nbsp;\n                <span className=\"value\">{value}</span>\n              </div>\n            );\n          })}\n        </div>\n\n        <button onClick={this.onAddChild} title=\"Add Member\">\n          +\n        </button>\n        {!children && (\n          <button onClick={this.onRemove} title=\"Remove Member\">\n            -\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MemberNode;\n","export default [\n  {\n    name: 'Ramesh',\n    key: 'Ramesh',\n    attributes: {\n      City: 'NY',\n      Gender: 'Male',\n      'Fav Color': 'Green',\n    },\n    children: [\n      {\n        name: 'Suresh',\n        key: 'Ramesh.Suresh',\n        attributes: {\n          City: 'Delhi',\n          Gender: 'Male',\n          'Fav Color': 'Blue',\n        },\n      },\n      {\n        name: 'Jitesh',\n        key: 'Ramesh.Jitesh',\n        children: [\n          {\n            name: 'Rakesh',\n            key: 'Ramesh.Jitesh.Rakesh',\n            attributes: {\n              City: 'Hyd',\n              Gender: 'Female',\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n","import React from 'react';\nimport Tree from 'react-d3-tree';\nimport './App.css';\nimport { deepClone, findMember } from './utils';\nimport MemberNode from './MemberNode';\nimport initialFamilyTree from './familyTreeMock';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: initialFamilyTree,\n      position: { x: 0, y: 0 },\n    };\n  }\n\n  componentDidMount() {\n    // Get treeContainer's dimensions so we can center the tree\n    const dimensions = this.treeContainer.getBoundingClientRect();\n    this.setState({\n      position: {\n        x: dimensions.width / 2,\n        y: 100,\n      },\n    });\n  }\n\n  addChild = (parent, child) => {\n    const nextData = deepClone(this.state.data);\n    const targetMember = findMember(nextData, parent.key);\n    targetMember.children = [...(targetMember.children || []), child];\n\n    this.setState({\n      data: nextData,\n    });\n  };\n\n  removeChild = child => {\n    const nextData = deepClone(this.state.data);\n    const targetMember = findMember(nextData, child.parent.key);\n    targetMember.children = targetMember.children.filter(\n      member => member.key !== child.key,\n    );\n\n    this.setState({\n      data: nextData,\n    });\n  };\n\n  render() {\n    const { data = [], position = {} } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">Family Tree</header>\n        <div\n          id=\"family-tree\"\n          style={{ width: '100vw', height: '100vh' }}\n          ref={dom => (this.treeContainer = dom)}\n        >\n          <Tree\n            data={data}\n            translate={position}\n            orientation={'vertical'}\n            nodeSize={{ x: 150, y: 170 }}\n            allowForeignObjects\n            circleRadius={16}\n            nodeLabelComponent={{\n              render: (\n                <MemberNode\n                  className=\"node-wrapper\"\n                  addChild={this.addChild}\n                  removeChild={this.removeChild}\n                />\n              ),\n              foreignObjectWrapper: {\n                x: -10,\n                y: -30,\n              },\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}